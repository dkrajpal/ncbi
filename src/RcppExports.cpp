// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// index_gi_taxid
void index_gi_taxid(const std::string& nucfile, const std::string& protfile, const std::string& outfile);
RcppExport SEXP ncbi_index_gi_taxid(SEXP nucfileSEXP, SEXP protfileSEXP, SEXP outfileSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type nucfile(nucfileSEXP );
        Rcpp::traits::input_parameter< const std::string& >::type protfile(protfileSEXP );
        Rcpp::traits::input_parameter< const std::string& >::type outfile(outfileSEXP );
        index_gi_taxid(nucfile, protfile, outfile);
    }
    return R_NilValue;
END_RCPP
}
// merge_gi_taxid
void merge_gi_taxid(const std::string& nucfile, const std::string& protfile, const std::string& outfile);
RcppExport SEXP ncbi_merge_gi_taxid(SEXP nucfileSEXP, SEXP protfileSEXP, SEXP outfileSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type nucfile(nucfileSEXP );
        Rcpp::traits::input_parameter< const std::string& >::type protfile(protfileSEXP );
        Rcpp::traits::input_parameter< const std::string& >::type outfile(outfileSEXP );
        merge_gi_taxid(nucfile, protfile, outfile);
    }
    return R_NilValue;
END_RCPP
}
// readNodes
Rcpp::List readNodes(const std::string& filename);
RcppExport SEXP ncbi_readNodes(SEXP filenameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP );
        Rcpp::List __result = readNodes(filename);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// readNames
Rcpp::List readNames(const std::string& filename);
RcppExport SEXP ncbi_readNames(SEXP filenameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP );
        Rcpp::List __result = readNames(filename);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// readMerged
Rcpp::List readMerged(const std::string& filename);
RcppExport SEXP ncbi_readMerged(SEXP filenameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP );
        Rcpp::List __result = readMerged(filename);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
